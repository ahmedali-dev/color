{"version":3,"sources":["component/Navbar.jsx","redux/ColorSlice.js","component/Palettes.jsx","component/Palette.jsx","component/Home.jsx","Router/Router.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Navbar","navRef","useRef","useEffect","window","addEventListener","e","scrollY","current","classList","add","remove","className","ref","to","lightOrDark","color","r","g","b","match","slice","replace","length","Math","sqrt","rand","floor","random","ColorSlice","createSlice","name","initialState","colorFilter","colorFinish","reducers","addColor","state","action","count","a2","returnColor","i","len","p1","p2","p3","c","push","randColor","colorSplit","colorSplitarray","forEach","includes","hex","id","actions","Palettes","useSelector","Color","dispatch","useDispatch","setTimeout","getcolorsheight","document","querySelectorAll","offsetTop","map","style","background","onClick","vl","target","querySelector","getAttribute","navigator","clipboard","writeText","then","error","copy","icon","faHeartCircleBolt","Palette","Home","Router","path","element","App","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f0cf7b9.chunk.js","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  const navRef = useRef();\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", (e) => {\n      if (window.scrollY > 50) {\n        navRef.current.classList.add(\"activenav\");\n      } else if (window.scrollY < 50) {\n        navRef.current.classList.remove(\"activenav\");\n      }\n    });\n  }, [navRef]);\n  return (\n    <div className=\"navbar\" ref={navRef}>\n      {/*\n       *logo\n       *navgation\n       *navToggle\n       */}\n\n      <div className=\"logo\">\n        <p>CO</p>\n      </div>\n\n      <div className=\"nav\">\n        <div className=\"nav-item\">\n          <Link to=\"/palettes\" className=\"nav-item-link\">\n            Palettes\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"navToggle\">\n        <span className=\"nav-toggle\"></span>\n        <span className=\"nav-toggle\"></span>\n        <span className=\"nav-toggle\"></span>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const lightOrDark = (color) => {\n  // Variables for red, green, blue values\n  var r, g, b, hsp;\n\n  // Check the format of the color, HEX or RGB?\n  if (color.match(/^rgb/)) {\n    // If RGB --> store the red, green, blue values in separate variables\n    color = color.match(\n      /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/\n    );\n\n    r = color[1];\n    g = color[2];\n    b = color[3];\n  } else {\n    // If hex --> Convert it to RGB: http://gist.github.com/983661\n    color = +(\"0x\" + color.slice(1).replace(color.length < 5 && /./g, \"$&$&\"));\n\n    r = color >> 16;\n    g = (color >> 8) & 255;\n    b = color & 255;\n  }\n\n  // HSP (Highly Sensitive Poo) equation from http://alienryderflex.com/hsp.html\n  hsp = Math.sqrt(0.299 * (r * r) + 0.587 * (g * g) + 0.114 * (b * b));\n\n  // Using the HSP value, determine whether the color is light or dark\n  if (hsp > 127.5) {\n    return \"light\";\n  } else {\n    return \"dark\";\n  }\n};\nexport const rand = (e) => Math.floor(Math.random() * e);\nexport const randLong = () => Math.floor(Math.random() * 9000000000);\nexport const randColor = (count) => {\n  const a2 = [\n    \"aa\",\n    \"ab\",\n    \"ac\",\n    \"ad\",\n    \"ba\",\n    \"bb\",\n    \"bc\",\n    \"bd\",\n    \"ca\",\n    \"cb\",\n    \"cc\",\n    \"cd\",\n    \"da\",\n    \"db\",\n    \"dc\",\n    \"dd\",\n    \"a0\",\n    \"a1\",\n    \"a2\",\n    \"a3\",\n    \"a4\",\n    \"a5\",\n    \"a6\",\n    \"a7\",\n    \"a8\",\n    \"a9\",\n    \"b0\",\n    \"b1\",\n    \"b2\",\n    \"b3\",\n    \"b4\",\n    \"b5\",\n    \"b6\",\n    \"b7\",\n    \"b8\",\n    \"b9\",\n    \"c0\",\n    \"c1\",\n    \"c2\",\n    \"c3\",\n    \"c4\",\n    \"c5\",\n    \"c6\",\n    \"c7\",\n    \"c8\",\n    \"c9\",\n    \"d0\",\n    \"d1\",\n    \"d2\",\n    \"d3\",\n    \"d4\",\n    \"d5\",\n    \"d6\",\n    \"d7\",\n    \"d8\",\n    \"d9\",\n    \"00\",\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"14\",\n    \"15\",\n    \"16\",\n    \"17\",\n    \"18\",\n    \"19\",\n    \"20\",\n    \"21\",\n    \"22\",\n    \"23\",\n    \"24\",\n    \"25\",\n    \"26\",\n    \"27\",\n    \"28\",\n    \"29\",\n    \"30\",\n    \"31\",\n    \"32\",\n    \"33\",\n    \"34\",\n    \"35\",\n    \"36\",\n    \"37\",\n    \"38\",\n    \"39\",\n    \"40\",\n    \"41\",\n    \"42\",\n    \"43\",\n    \"44\",\n    \"45\",\n    \"46\",\n    \"47\",\n    \"48\",\n    \"49\",\n    \"50\",\n    \"51\",\n    \"52\",\n    \"53\",\n    \"54\",\n    \"55\",\n    \"56\",\n    \"57\",\n    \"58\",\n    \"59\",\n    \"60\",\n    \"61\",\n    \"62\",\n    \"63\",\n    \"64\",\n    \"65\",\n    \"66\",\n    \"67\",\n    \"68\",\n    \"69\",\n    \"70\",\n    \"71\",\n    \"72\",\n    \"73\",\n    \"74\",\n    \"75\",\n    \"76\",\n    \"77\",\n    \"78\",\n    \"79\",\n    \"80\",\n    \"81\",\n    \"82\",\n    \"83\",\n    \"84\",\n    \"85\",\n    \"86\",\n    \"87\",\n    \"88\",\n    \"89\",\n    \"90\",\n    \"91\",\n    \"92\",\n    \"93\",\n    \"94\",\n    \"95\",\n    \"96\",\n    \"97\",\n    \"98\",\n    \"99\",\n  ];\n\n  const returnColor = [];\n  for (let i = 0; i < count; i++) {\n    const len = a2.length;\n    let p1 = a2[rand(len)];\n    let p2 = a2[rand(len)];\n    let p3 = a2[rand(len)];\n\n    if (p1 != p2 || p2 != p3) {\n      const c = \"#\" + p1 + p2 + p3;\n      returnColor.push(c);\n    }\n  }\n\n  return returnColor;\n};\n\nexport const ColorSlice = createSlice({\n  name: \"product\",\n  initialState: {\n    color: [],\n    colorFilter: [],\n    colorFinish: [],\n  },\n  reducers: {\n    addColor: (state, action) => {\n      // state.colorFinish.push(randColor(500));\n\n      //set color and push color if colorFinish length == 0\n      state.color = [...state.color, ...randColor(200), ...state.colorFilter];\n\n      //get state.color and filter similar color\n      if (state.color.length > 0) {\n        let colorSplit = 0;\n        let colorSplitarray = [];\n        state.color.forEach((e, i) => {\n          if (state.color.includes(e) && !state.colorFilter.includes(e)) {\n            if (colorSplit < 5) {\n              colorSplitarray.push([e, lightOrDark(e)]);\n              colorSplit++;\n            } else {\n              state.colorFilter.push({\n                hex: colorSplitarray,\n                id: randLong(),\n              });\n              colorSplitarray = [];\n              colorSplit = 0;\n            }\n          }\n        });\n      }\n\n      //set colorFilter object in colorFinish\n      state.colorFinish.push(...state.colorFilter);\n      //and remove color from array color\n      state.color = [];\n    },\n  },\n});\n\nexport const { addColor } = ColorSlice.actions;\n\nexport default ColorSlice.reducer;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeartCircleBolt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { addColor } from \"../redux/ColorSlice\";\nconst Palettes = () => {\n  // getColorFinsh\n  const { colorFinish, color, colorFilter } = useSelector(\n    (state) => state.Color\n  );\n\n  // dispatch\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(addColor());\n    setTimeout(() => {\n      // dispatch(filterColor());\n    }, 3000);\n  }, []);\n\n  const popup = (e) => {\n    setTimeout(() => {}, 5000);\n  };\n\n  const addNewColor = () => {\n    window.addEventListener(\"scroll\", (e) => {\n      const getcolorsheight = document.querySelectorAll(\".palettes_result_col\");\n      const getcolorheight =\n        getcolorsheight[getcolorsheight.length - 1].offsetTop;\n      const scrollValue = window.scrollY + 831;\n\n      if (getcolorheight <= scrollValue) {\n        dispatch(addColor());\n      }\n    });\n  };\n\n  useEffect(() => {\n    addNewColor();\n  });\n  const copy = (e) => {\n    try {\n      let vl = e.target.querySelector(\"small\").getAttribute(\"data-color\");\n\n      navigator.clipboard.writeText(vl).then(() => {});\n    } catch (error) {\n      return \"\";\n    }\n  };\n\n  // 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\n  // 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\n  return (\n    <>\n      <div className=\"palettes\">\n        {/* header */}\n        <div className=\"s palettes-header container\">\n          <div className=\"pageTitle\">\n            <h1>ColorPalettes</h1>\n            <div>Get beautiful color schemes</div>\n          </div>\n        </div>\n\n        {/* colors */}\n        <div className=\"palettes_result container\">\n          {colorFinish.map((color) => {\n            return (\n              <div data-id={color.id} className=\"palettes_result_col\">\n                {/* colors */}\n                <div className=\"palettes_result_col_colors\">\n                  {color.hex.map((c) => (\n                    <div\n                      style={{ background: `${c[0]}` }}\n                      onClick={(e) => copy(e)}\n                    >\n                      <small data-color={c[0]} className={c[1]}>\n                        {c[0]}\n                      </small>\n                    </div>\n                  ))}\n                </div>\n\n                {/* info */}\n                <div className=\"palettes_result_col_info\">\n                  <div className=\"palettes_result_col_info_button_pal_save\">\n                    <button className=\"link\">\n                      <FontAwesomeIcon icon={faHeartCircleBolt} />\n                      <small>30K</small>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* message pop up */}\n      <div className=\"pop\"></div>\n    </>\n  );\n};\n\nexport default Palettes;\n","const Palette = () => {\n  return <>hello</>;\n};\n\nexport default Palette;\n","const Home = () => {\n  return <>hello</>;\n};\n\nexport default Home;\n","import { Routes, Route } from \"react-router-dom\";\nimport Palettes from \"../component/Palettes\";\nimport Palette from \"../component/Palette\";\nimport Home from \"../component/Home\";\n\nconst Router = () => {\n  return (\n    <>\n      <Routes>\n        {/* product page */}\n        <Route path=\"/\" element={<Home />} />\n\n        {/* palettes */}\n        <Route path=\"/palettes\" element={<Palettes />} />\n        <Route path=\"/palettes/:id\" element={<Palette />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default Router;\n","import React, { useState, Component } from \"react\";\nimport Navbar from \"./component/Navbar\";\nimport Router from \"./Router/Router\";\nimport \"./component/css/main.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport ColorSlice from \"./ColorSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    Color: ColorSlice,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"../node_modules/@fortawesome/fontawesome-svg-core/styles.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}